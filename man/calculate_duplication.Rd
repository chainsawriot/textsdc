% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duplication.R
\name{calculate_duplication}
\alias{calculate_duplication}
\title{Calculate duplication from a text vector}
\usage{
calculate_duplication(input_text, return_text_only = FALSE,
  method = "cosine", threshold = 0.99, percentile = FALSE,
  low_memory = FALSE, verbose = FALSE)
}
\arguments{
\item{input_text}{text vector to be analysed}

\item{return_text_only}{logical, if TRUE, return only the cleaned version of text. If FALSE, return a duplication object.}

\item{method}{character, which method to calculate similarity between documents. Default is "cosine" (cosine similarity), other options are: "correlation", "jaccard", "ejaccard", "dice", "edice", "hammm", "simple matching", please refer to quanteda::textstat_simil()}

\item{threshold}{numeric, the numeric threshold of text similarity between two documents to be assumed to be duplicates. If percentile is TRUE, this threshold is a percentile rank.}

\item{percentile}{logical, if TRUE, threshold is a percentile rank. (i.e. two documents are assumed to be duplicates, when the text similarity between them is higher than this percentile.)}

\item{low_memory}{logical, if TRUE, the similarity matrix is not convert to matrix. The trade-off: the deduplication process is going to be slower.}

\item{verbose}{logical, if TRUE, display debug messages.}
}
\value{
a duplication object if return_text_only is FALSE. a text vector otherwise.
}
\description{
This function uses the simple bag-of-words assumption to calculate possible duplicates in the input text vector. It works better with longer text than shorter text.
}
